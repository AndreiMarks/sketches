using UnityEngine;
using System;
using System.Collections;

/// <summary>
/// This demo shows how to get a file's information from Dropbox.
/// </summary>
public class GetMetaData : _Demo_Base 
{
	void Awake()
	{
		_title = "Get MetaData For Files and Folders";
	}
	
	protected override void DrawActionSection()
	{
		GUILayout.BeginVertical("box");
		
		DrawRootSelector();
		DrawTextField("Remote File or Folder Name", ref _remotePath);
		DrawTextField("File Limit", ref _fileLimit);
		DrawTextField("Hash String", ref _hash);
		DrawToggleField("List Folder Contents", ref _listContents);
		DrawToggleField("Include Deleted Items", ref _includeDeleted);
		DrawTextField("Rev", ref _rev);
		DrawTextField("Locale", ref _locale);
		
		GUILayout.EndVertical();
		
		if (GUILayout.Button("Get Meta Data", GUILayout.Width(BUTTON_WIDTH), GUILayout.Height(BUTTON_HEIGHT)))
		{
			if (CheckInput())
			{
				ResetResults();

                // Get the MetaData
                // REQ = required parameter. opt = optional parameter. 
                // Optional parameters don't need to be sent to the function, 
                // but will be here for full illustration.
				boxitClient.GetMetaData(
                                        GetSelectedRoot(),                  // [REQ] Root from which to start
                                        _remotePath,                        // [REQ] The file from which to get MetaData. The path is relative to the root
                                        Success,                            // [REQ] The success delegate to call when the process is complete
                                        Failure,                            // [opt] The failure delegate to call if the process fails
                                        _fileLimitNumber,                   // [opt] When listing a folder, the service will not report listings containing more than the specified amount of files and will instead respond with a 406 (Not Acceptable) status response. Default = 10,000. Max is 25,000
                                        (_hash == "" ? null : _hash),       // [opt] Each call to GetMetaData on a folder will return a hash field, generated by hashing all of the MetaData contained in that response. On later calls to GetMetaData, you should provide that value via this parameter so that if nothing has changed, the MetaData will be null instead of the full, potentially very large, folder listing. This parameter is ignored if the specified path is associated with a file or if listContents = false. A folder shared between two users will have the same hash for each user.
                                        _listContents,                      // [opt] The strings true and false are valid values. true is the default. If true, the folder's metadata will include a contents field with a list of metadata entries for the contents of the folder. If false, the contents field will be omitted.
                                        _includeDeleted,                    // [opt] If this parameter is set to true, then files and folders that have been deleted will also be included in the GetMetaData call.
                                        (_rev == "" ? null : _rev),         // [opt] If you include a particular revision number, then only the metadata for that revision will be returned.
                                        (_locale == "" ? null : _locale)    // [opt] The locale to apply to the MetaData results
										);
			}
		}	
	}
	
	private bool CheckInput()
	{
		if (!StringIsLong(_fileLimit, out _fileLimitNumber))
		{
			_error = "File Limit must be a number";
			return false;
		}
		
		return true;
	}

    /// <summary>
    /// This delegate is called if the procedure completes successfully.
    /// </summary>
    /// <param name="requestID">The ID of the request that finished</param>
    /// <param name="fullLocalFilePath">The MetaData structure where the results are stored</param>
	private void Success(long requestID, Boxit.MetaData metaData)
	{
        // If the MetaData is null, then there is no difference in the folder listing
        // from the last time it was called, given the hash that was passed.

		if (metaData != null)
			_results = "Success: " + metaData.ToString();
		else
			_results = "No change in the MetaData";
	}

    /// <summary>
    /// This delegate is called if the procedure fails. If this delegate is not
    /// specified, then Boxit will display an error log instead
    /// </summary>
    /// <param name="requestID">The ID of the request that failed</param>
    /// <param name="error">Error description</param>
	private void Failure(long requestID, string error)
	{
		_results = "Failure: " + error;
	}
}
